name: Daily Random Commits

on:
  schedule:
    - cron: '0 */4 * * *'  # Run every 4 hours
  workflow_dispatch:  # Allows manual trigger

jobs:
  auto-commit:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v2
      with:
        fetch-depth: 0
        token: ${{ secrets.PAT_TOKEN }}
        
    - name: Configure Git
      run: |
        git config --global user.name 'iamr7d'
        git config --global user.email 'rahulrajpvr7d.here@gmail.com'
        
    - name: Check and make commits
      env:
        PAT_TOKEN: ${{ secrets.PAT_TOKEN }}
      run: |
        # Get current date and hour
        CURRENT_DATE=$(date '+%Y-%m-%d')
        CURRENT_HOUR=$(date +%H)
        
        # Calculate total commits already made today
        TOTAL_COMMITS=$(git log --since="midnight" --format=oneline | wc -l)
        
        # Check if we've already met our daily target
        if [ $TOTAL_COMMITS -ge 8 ]; then
          echo "Already achieved minimum daily commits ($TOTAL_COMMITS commits today)"
          exit 0
        fi
        
        if [ $TOTAL_COMMITS -ge 24 ]; then
          echo "Already reached maximum daily commits ($TOTAL_COMMITS commits today)"
          exit 0
        fi
        
        # Function to make a commit
        make_commit() {
          local timestamp=$(date '+%H:%M:%S')
          echo "Daily commit at $timestamp" >> data.txt
          git add data.txt
          git commit -m "Daily update - $CURRENT_DATE $timestamp"
          TOTAL_COMMITS=$((TOTAL_COMMITS + 1))
        }
        
        # Determine how many commits to make this run
        REMAINING_COMMITS=$((24 - TOTAL_COMMITS))
        MAX_COMMITS_THIS_RUN=4  # Maximum commits per run
        
        if [ $REMAINING_COMMITS -gt 0 ]; then
          # Random number of commits for this run
          COMMITS_TO_MAKE=$((RANDOM % MAX_COMMITS_THIS_RUN + 1))
          
          # Don't exceed remaining commits needed
          if [ $COMMITS_TO_MAKE -gt $REMAINING_COMMITS ]; then
            COMMITS_TO_MAKE=$REMAINING_COMMITS
          fi
          
          # Make the commits
          for ((i=0; i<$COMMITS_TO_MAKE; i++)); do
            make_commit
            sleep $((30 + RANDOM % 120))  # Random delay between commits (30-150 seconds)
          done
          
          # Push the commits
          git remote set-url origin "https://$PAT_TOKEN@github.com/iamr7d/behavellm.git"
          git push origin main
        fi
        
        # If it's late (after 8 PM) and we're below minimum, add remaining commits
        if [ $CURRENT_HOUR -ge 20 ] && [ $TOTAL_COMMITS -lt 8 ]; then
          NEEDED_COMMITS=$((8 - TOTAL_COMMITS))
          for ((i=0; i<$NEEDED_COMMITS; i++)); do
            make_commit
            sleep $((15 + RANDOM % 45))  # Shorter delays for catch-up commits
          done
          git push origin main
        fi
